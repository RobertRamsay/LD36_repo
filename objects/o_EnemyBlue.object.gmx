<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_Player3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_car_c</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Init

//Base Variables
image_speed = 0;
//image_blend=c_red;
friction=0.2

//Vehicl\Driver Variables
maxSpeed = 3;
tires = 4;
tBoost = 0;
sBoost = 0;
caution = 0;
aggro = 0;
name="Blue Driver"

// Movement\Turning Variables
myDir = instance_create(x,y,o_Angle);
myDir.pFollow = id;
PIAngle = 0;
i_angle = 0;

//Navigation Variables
nextstop = 0;
rand=choose(1,2,3);
getNode=noone;
pathL=0;

// Sprite Change for making it animate when moving normally (based on speed)
spriteChange=0;
sprite0=s_Player3;
sprite1=s_Player3_alt;
spriteAimR=s_Player3_aim_R
spriteAimL=s_Player3_aim_L 
spriteHitR=s_Player3_hit_R
spriteHitL=s_Player3_hit_L 
animstate=0;
idle=0
animspeed=3;
clubleft=1 
clubright=2
done=0 // for coming out
strikedistance=80
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// hitframe Left
sprite_index=spriteHitL
if (angleDifference&gt;-120 and angleDifference&lt;-80) and point_distance(x,y,o_Player.x,o_Player.y)&lt;100
    {
    if !audio_is_playing(sou_hitWithClub) {audio_play_sound(sou_hitWithClub,1,0)}
    }
alarm[0]=7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// hitframe Right
sprite_index=spriteHitR
if (angleDifference&gt;80 and angleDifference&lt;120) and point_distance(x,y,o_Player.x,o_Player.y)&lt;100
    {
    if !audio_is_playing(sou_hitWithClub) {audio_play_sound(sou_hitWithClub,1,0)}
    }
alarm[0]=7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go to idle mode
animstate=idle;done=0
sprite_index=s_Player3

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-y</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Navigation

//Build\Find My Path

switch (rand) {

    case 1:
        xP = path_get_point_x(path0, nextstop);
        yP = path_get_point_y(path0, nextstop);
        pathL = path_get_number(path0);
        break
    
    case 2:
        xP = path_get_point_x(path1, nextstop);
        yP = path_get_point_y(path1, nextstop);
        pathL = path_get_number(path1);
        break
    
    case 3:
        xP = path_get_point_x(path2, nextstop);
        yP = path_get_point_y(path2, nextstop);
        pathL = path_get_number(path1);
        break      
}
    
if ( point_distance(x,y,xP,yP) &gt; 64 ) {
    
   var pd = (point_direction(x,y,xP,yP) div 10) * 10;
   var ad = angle_difference(image_index*10, pd); 
   i_angle -= min(abs(ad), 6) * sign(ad);
   
   image_index = i_angle div 10;

    if ( abs(ad) &gt;= 30 ) {
        caution = clamp(((abs(ad) div 10) - 2), 1, 4);
        speed = (maxSpeed + 5) - caution;
    } else {
        speed = maxSpeed + 5;
    }        
    
    PIAngle = myDir.image_angle;
    motion_set(PIAngle, speed);
    
    
} else {
    if ( nextstop &lt; pathL - 1 ) {
        nextstop += 1;
    } else {
        nextstop = 1;
    }
    rand=choose(1,2,3);
}

// AI attacking
angleDifference=angle_difference(direction,(point_direction(x,y,o_Player.x,o_Player.y)));

if point_distance(o_Player.x,o_Player.y,x,y)&lt;strikedistance and angleDifference &gt;-100 and angleDifference &lt;-80
    {
    // hit left
    if o_Player.sprite_index=s_hitClub_R // is the player trying to hit me?
        {
        if point_distance(o_Player.x,o_Player.y,x,y)&lt;strikedistance-20 
            {
            //be hit by player 
            if !audio_is_playing(sou_hitWithClub) 
                {
                audio_play_sound(sou_hitWithClub,1,0)
                } 
            }
        }
        
    // take a swipe at player
    if !audio_is_playing(sou_swipe) and animstate=idle audio_play_sound(sou_swipe,1,0); 
    animstate=clubleft
    }
    
if point_distance(o_Player.x,o_Player.y,x,y)&lt;strikedistance and angleDifference &gt;80 and angleDifference&lt;120
    {
    // hit right
    if o_Player.sprite_index=s_hitClub_L // is the player trying to hit me?
        {
        if point_distance(o_Player.x,o_Player.y,x,y)&lt;strikedistance-20 
            {
            //be hit by player 
            if !audio_is_playing(sou_hitWithClub) 
                {
                audio_play_sound(sou_hitWithClub,1,0)
                } 
            }
        }
        
    // take a swipe at player
    if !audio_is_playing(sou_swipe) and animstate=idle audio_play_sound(sou_swipe,1,0); 
    animstate=clubright
    }

// Animation states

if animstate=idle
    {
    spriteChange+=speed*animspeed;
        {
        if spriteChange&lt;=50 sprite_index=sprite0
        if spriteChange&gt;50 sprite_index=sprite1
        }
    if spriteChange&gt;100 spriteChange=0
    }
    

    
if animstate=clubright and done=0
    {
    sprite_index=spriteAimR
    alarm[1]=10;done=1
    }
    
if animstate=clubleft and done=0
    {
    sprite_index=spriteAimL
    alarm[2]=10;done=1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_Rock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(PIAngle,-(clamp(speed*1.5,4,7)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(PIAngle,-(clamp(speed*1.5,4,7)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_plant">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed*=0.9
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(other.direction, other.speed*1.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_font(font0);
draw_text(50, 150, nextstop);
draw_text(50, 180, speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
